{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emji\\\\Desktop\\\\New folder (3)\\\\nd0191-c1-myreads-main\\\\nd0191-c1-myreads-main\\\\starter\\\\src\\\\components\\\\shelf.js\";\nimport React from \"react\";\nimport Book from \"./Book\";\nimport { PropTypes } from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Shelf = ({\n  titleName,\n  booksData,\n  shelf,\n  handleUpdateShelf\n}) => {\n  /* TODO: \r\n    before passing data to the book component we have to make filtration to the data,\r\n    data must be passed depends om it's state as currently reading, want to read or read\r\n    this depends on our selection which passe from shelf\r\n  */\n  const bookShelf = booksData.filter(book => book.shelf === shelf);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookshelf\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bookshelf-title\",\n      children: titleName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf-books\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: bookShelf.map(book => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Book, {\n            book: book,\n            handleUpdateShelf: handleUpdateShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Shelf;\nShelf.propTypes = {\n  titleName: PropTypes.string.isRequired,\n  booksData: PropTypes.array.isRequired,\n  handleUpdateShelf: PropTypes.func.isRequired,\n  shelf: PropTypes.string.isRequired\n};\nexport default Shelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Shelf\");","map":{"version":3,"sources":["C:/Users/emji/Desktop/New folder (3)/nd0191-c1-myreads-main/nd0191-c1-myreads-main/starter/src/components/shelf.js"],"names":["React","Book","PropTypes","Shelf","titleName","booksData","shelf","handleUpdateShelf","bookShelf","filter","book","map","id","propTypes","string","isRequired","array","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,SAAT,QAA0B,YAA1B;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA;AAA/B,CAAD,KAAwD;AACpE;AACF;AACA;AACA;AACA;AACE,QAAMC,SAAS,GAAGH,SAAS,CAACI,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACJ,KAAL,KAAeA,KAA1C,CAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,gBAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGI,SAAS,CAACG,GAAV,CAAeD,IAAD,iBACb;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,IAAZ;AAAkB,YAAA,iBAAiB,EAAEH;AAArC;AAAA;AAAA;AAAA;AAAA;AADF,WAAUG,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAtBD;;KAAMT,K;AAwBNA,KAAK,CAACU,SAAN,GAAkB;AAChBT,EAAAA,SAAS,EAAEF,SAAS,CAACY,MAAV,CAAiBC,UADZ;AAEhBV,EAAAA,SAAS,EAAEH,SAAS,CAACc,KAAV,CAAgBD,UAFX;AAGhBR,EAAAA,iBAAiB,EAAEL,SAAS,CAACe,IAAV,CAAeF,UAHlB;AAIhBT,EAAAA,KAAK,EAAEJ,SAAS,CAACY,MAAV,CAAiBC;AAJR,CAAlB;AAMA,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\r\nimport Book from \"./Book\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst Shelf = ({ titleName, booksData, shelf, handleUpdateShelf }) => {\r\n  /* TODO: \r\n    before passing data to the book component we have to make filtration to the data,\r\n    data must be passed depends om it's state as currently reading, want to read or read\r\n    this depends on our selection which passe from shelf\r\n  */\r\n  const bookShelf = booksData.filter((book) => book.shelf === shelf);\r\n\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{titleName}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {bookShelf.map((book) => (\r\n            <div key={book.id}>\r\n              <Book book={book} handleUpdateShelf={handleUpdateShelf} />\r\n            </div>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShelf.propTypes = {\r\n  titleName: PropTypes.string.isRequired,\r\n  booksData: PropTypes.array.isRequired,\r\n  handleUpdateShelf: PropTypes.func.isRequired,\r\n  shelf: PropTypes.string.isRequired,\r\n};\r\nexport default Shelf;\r\n"]},"metadata":{},"sourceType":"module"}