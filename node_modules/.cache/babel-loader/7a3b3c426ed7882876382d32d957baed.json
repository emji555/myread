{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { search } from \"../BooksAPI\";\nimport { useDebounce } from \"use-debounce\";\n\nconst HookQuery = searchQuery => {\n  _s();\n\n  const [searchBookQuery, setSearchBookQuery] = useState([]);\n  const [valueSearch] = useDebounce(searchQuery, 500);\n  useEffect(() => {\n    let isActive = true;\n\n    if (valueSearch) {\n      search(valueSearch).then(data => {\n        if (data.error) {\n          setSearchBookQuery([]);\n        } else {\n          if (isActive) {\n            setSearchBookQuery(data);\n          }\n        }\n      });\n    }\n\n    return () => {\n      isActive = false;\n      setSearchBookQuery([]);\n    };\n  }, [valueSearch]);\n  return [searchBookQuery, setSearchBookQuery];\n};\n\n_s(HookQuery, \"Jpw9RCc/niTakM5lKnypf+9q0dA=\", false, function () {\n  return [useDebounce];\n});\n\n_c = HookQuery;\nexport default HookQuery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HookQuery\");","map":{"version":3,"sources":["C:/Users/emji/Desktop/New folder (3)/nd0191-c1-myreads-main/nd0191-c1-myreads-main/starter/src/components/HookQuery.js"],"names":["useState","useEffect","search","useDebounce","HookQuery","searchQuery","searchBookQuery","setSearchBookQuery","valueSearch","isActive","then","data","error"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAEA,MAAMC,SAAS,GAAIC,WAAD,IAAiB;AAAA;;AACjC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,WAAD,IAAgBL,WAAW,CAACE,WAAD,EAAc,GAAd,CAAjC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAQ,GAAG,IAAf;;AACA,QAAID,WAAJ,EAAiB;AACfN,MAAAA,MAAM,CAACM,WAAD,CAAN,CAAoBE,IAApB,CAA0BC,IAAD,IAAU;AACjC,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACdL,UAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,SAFD,MAEO;AACL,cAAIE,QAAJ,EAAc;AACZF,YAAAA,kBAAkB,CAACI,IAAD,CAAlB;AACD;AACF;AACF,OARD;AASD;;AACD,WAAO,MAAM;AACXF,MAAAA,QAAQ,GAAG,KAAX;AACAF,MAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,KAHD;AAID,GAjBQ,EAiBN,CAACC,WAAD,CAjBM,CAAT;AAkBA,SAAO,CAACF,eAAD,EAAkBC,kBAAlB,CAAP;AACD,CAvBD;;GAAMH,S;UAEkBD,W;;;KAFlBC,S;AAyBN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { search } from \"../BooksAPI\";\r\nimport { useDebounce } from \"use-debounce\";\r\n\r\nconst HookQuery = (searchQuery) => {\r\n  const [searchBookQuery, setSearchBookQuery] = useState([]);\r\n  const [valueSearch] = useDebounce(searchQuery, 500);\r\n\r\n  useEffect(() => {\r\n    let isActive = true;\r\n    if (valueSearch) {\r\n      search(valueSearch).then((data) => {\r\n        if (data.error) {\r\n          setSearchBookQuery([]);\r\n        } else {\r\n          if (isActive) {\r\n            setSearchBookQuery(data);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      isActive = false;\r\n      setSearchBookQuery([]);\r\n    };\r\n  }, [valueSearch]);\r\n  return [searchBookQuery, setSearchBookQuery];\r\n};\r\n\r\nexport default HookQuery;\r\n"]},"metadata":{},"sourceType":"module"}